"""
Сортировка пузырьком
"""

# a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6,  8, -2, 99]
# n = len(a)
#
# for i in range(n - 1):
#     for j in range(n - i - 1):
#         if a[j] > a[j + 1]:                  # если порядок элементов пары неправильный
#             a[j], a[j + 1] = a[j + 1], a[j]  # меняем элементы пары местами
#
# print('Отсортированный список:', a)

"""
оптимизируем сортировку)
"""
# a = [17, 24, 91, 96, 67, -27, 79, -71, -71, 58, 48, 88, 88, -16, -78, 96, -76,
# 56, 92, 1, 32, -17, 36, 88, -61, -97, -37, -84, 50, 47, 94, -6, 52, -76, 93, 14,
# -32, 98, -65, -16, -9, -68, -20, -40, -71, 93, -91, 44, 25, 79, 97, 0, -94, 7, -47,
# -96, -55, -58, -78, -78, -79, 75, 44, -56, -41, 38, 16, 70, 17, -17, -24, -83, -74,
# -73, 11, -26, 63, -75, -19, -13, -51, -74, 21, -8, 21, -68, -66, -84, -95, 78, 69,
# -29, 39, 38, -55, 7, -11, -26, -62, -84]
# a.sort()
# print(a)


"""
Отсортируйте список по возрастанию, реализовав алгоритм сортировки выбором
"""
# a = [78, -32, 5, 39, 58, -5, -63, 57, 72, 9, 53, -1, 63, -97, -21, -94, -47, 57,
# -8, 60, -23, -72, -22, -79, 90, 96, -41, -71, -48, 84, 89, -96, 41, -16, 94, -60,
# -64, -39, 60, -14, -62, -19, -3, 32, 98, 14, 43, 3, -56, 71, -71, -67, 80, 27, 92,
# 92, -64, 0, -77, 2, -26, 41, 3, -31, 48, 39, 20, -30, 35, 32, -58, 2, 63, 64, 66,
# 62, 82, -62, 9, -52, 35, -61, 87, 78, 93, -42, 87, -72, -10, -36, 61, -16, 59, 59,
# 22, -24, -67, 76, -94, 59]
# n = len(a)
# b = []
# for i in range(n):
#     b.append(min(a))
#     a.remove(min(a))
# print(b)

"""
Сортировка вставками
"""
# a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6,  8, -2, 99]
# n = len(a)
#
# for i in range(1, n):
#     elem = a[i]  # первый элемент из неотсортированной части списка
#     j = i
#     while j >= 1 and a[j - 1] > elem:
#         a[j] = a[j - 1]
#         j -= 1
#     a[j] = elem
#
#
# print('Отсортированный список:', a)


"""
Напишите программу, которая выводит список четных чисел
"""
# print([i for i in range(2, int(input()) + 1, 2)])


"""
 апишите программу, которая создает третий список, элементами которого
являются суммы соответствующих элементов списков L и M
"""
# L, M = input().split(), input().split()
# for i in range(len(L)):
#     L[i] = int(L[i]) + int(M[i])
# print(*L)
#
# M, N = [int(_) for _ in input().split()], [int(_) for _ in input().split()]
# print(*[M[i]+N[i]for i in range(len(M))])

"""
На вход программе подается строка текста, содержащая натуральные числа. Напишите
программу, которая вставляет между каждым числом знак +,
а затем вычисляет сумму полученных чисел.
"""
# N = [int(_) for _ in input().split()]
# print(*N, sep='+', end='=')
# print(sum(N))


"""
Напишите программу, которая определяет является ли введенная строка корректным телефонным номером
"""
# s = input()
# flag = "YES"
# for i in s:
#     if i not in '0123456789-':
#         flag = "NO"
#         break
# if s[0] == '7':
#     if s[1] != '-' or s[5] != '-' or s[9] != '-' or len(s) != 14:
#         flag = "NO"
# elif s[3] != '-' or s[7] != '-' or len(s) != 12:
#     flag = "NO"
# print(flag)


"""
Напишите программу, использующую списочное выражение, которая находит длину самого длинного слова.
"""
# print(max([len(i) for i in input().split()]))

"""
Напишите программу, использующую списочное выражение, которая преобразует каждое 
слово введенного текста в "молодежный жаргон" по следующему правилу: 
первая буква каждого слова удаляется и ставится в конец слова; 
затем в конец слова добавляется слог "ки".
"""
# print(*[i[1:] + i[0] + 'ки' for i in input().split()])
